# 에피소드 데이터 구조
class Episode:
    def __init__(self, title, question, clues, answer):
        self.title = title
        self.question = question
        self.clues = clues  # 단서 리스트
        self.answer = answer

# 샘플 에피소드들
EPISODES = [
    Episode(
        title="바다거북수프",
        question="""한 남자가 바닷가에 있는 고급 레스토랑에 들어간다. 그는 바다거북 수프를 주문한다.
            바다거북 수프를 한 숟갈 떠먹은 그는 주방장을 불러 말한다.
            "이거 정말로 바다거북 수프인가요?"
            "네, 틀림없는 바다거북 수프 맞습니다."
            남자는 계산을 마친 뒤 집에 돌아가서 자살한다.
            왜 그랬을까?""",
        clues=[
            "남자는 과거에 조난을 당한 적이 있었다.",
            "조난 상황에서 그는 '바다거북 수프'라 속은 인육 수프를 먹고 살아남았다.",
            "레스토랑에서 진짜 바다거북 수프를 맛본 뒤, 과거 자신이 먹은 것이 인육임을 깨달았다."
        ],
        answer="""남자는 배를 타고 있었는데 남자가 탄 배가 조난되었다. 몇 명의 다른 사람들과 함께 구명보트를 타서 죽음은 면했지만, 작은 섬에 표류하는 처지가 되었다.
식재료가 떨어진 일행은 체력이 떨어지는 사람부터 죽어가기 시작했다. 결국, 살아남은 사람들은 살기 위하여 시체의 살을 먹기 시작했지만, 단 한 남자만이 이 식인 행위를 강력하게 거부했다. 당연히 그 남자는 서서히 죽어가게 되었다.
죽어가는 그를 그냥 두고 볼 수 없었던 다른 사람들은 인육으로 수프를 끓인 뒤, 남자에게 말했다.
"바다거북을 사냥했어. 고기로 수프를 끓였으니 먹어봐. 당분간은 바다거북 수프로 연명하자."
수프를 먹고 기력을 차린 남자는 구조될 때까지 살아남을 수 있었다.
그 뒤 레스토랑에서 명백하게 맛이 전혀 다른 진짜 바다거북 수프를 직면하게 된 남자는 자신이 인육을 먹었다는 진실을 알게 된 뒤 죄책감에 목숨을 끊었다."""
    ),
    Episode(
        title="손발을 자르는 산타",
        question="""크리스마스의 밤, 어떤 아이가 산타에게 친구가 가지고 싶다는 소원을 빌며 잠들었습니다.
다음 날 눈을 떠보니 아이의 오른손과 왼발이 절단된 채 침대에는 피 웅덩이가 생겨있었습니다.

아이는 바로 병원으로 이송되어 어떻게든 목숨을 건질 수는 있었습니다.

어째서 이런 일이 일어나게 된 걸까요?""",
        clues=[
            "아이는 태어날 때부터 오른손과 왼발이 하나씩 더 있는 기형이었다",
            "소원을 계기로 누군가가 밤사이 추가된 손과 발을 절단했다."
        ],
        answer="""아이는 선천적으로 오른손과 왼발을 하나 더 많은 기형아였다. 
        주위의 아이들은 그 하나 더 많은 오른손과 왼손을 징그럽게 여겨 친구가 한 명도 없었다. 
        그것을 해결하기 위해 절제 수술을 하고 싶었으나, 가난했기 때문에 수술 비용을 마련하지 못해 그대로 살 수밖에 없었다. 
        그런 중에 크리스마스에 산타가 선물을 가지고 찾아온다는 이야기를 듣고 친구가 생겼으면 좋겠다고 소원을 빌었다. 
        그러자 다음 날 아침, 그 아이의 오른손과 왼발이 절단되어 있었던 것이다. 
        병원으로 옮겨져 목숨을 구한 그 아이는 주위의 아이들과 같은 신체가 될 수 있었으며, 그 후 친구도 많이 사귀게 되었습니다."""
    ),
    Episode(
        title="과학 실험",
        question="""한 과학자가 중대한 실험을 했다. 결과는 대성공이었지만 다른 학자들이 전혀 반응을 하지 않았다. 왜그랬을까""",
        clues=[
            "과학자가 시간을 멈추는 실험에 성공해서 다른 학자들은 반응을 하지 않았다."
        ],
        answer="""과학자가 진행한 실험은 '시간을 멈추는 것'이었다. 
실험은 실제로 완벽하게 성공했기 때문에, 그 순간 세상의 모든 것이 정지했다. 
즉 다른 학자들도 숨 쉬는 것조차 멈춘 상태였으므로, 실험이 성공했다는 사실을 인식하거나 반응할 수 없었던 것이다. 
따라서 실험은 대성공이었지만, 그 성공을 알아줄 사람은 아무도 없었다."""
    ),
    Episode(
        title="사라진 코드 리뷰",
        question="""개발자 원석은 회사에서 중요한 프로젝트를 맡아 진행하고 있었습니다. 
        그는 마감 기한 전에 열심히 코드를 작성했지만, 이상하게도 아무도 그의 작업에 대해 피드백을 주지 않았습니다.
원석은 분명 코드 리뷰를 요청했는데도, 동료들은 전혀 반응을 보이지 않았습니다.
왜 아무도 코드 리뷰를 하지 않았을까요?""",
        clues=[
            "원석은 코드를 로컬 저장소에만 커밋했다."
        ],
        answer="""원석은 깃허브에 코드를 올렸다고 착각했지만, 실제로는 로컬 저장소에만 커밋해 둔 상태였다. 
        그래서 동료들은 그의 코드를 확인할 수 없었고, 당연히 코드 리뷰도 이뤄지지 않았다. 
        결국 아무도 반응하지 않은 이유는 원석이 푸시를 하지 않았기 때문이다."""
    ),
    Episode(
        title="도망치는 아이",
        question="""한 아이가 가만히 서서 무언가를 빤히 바라보더니, 갑자기 긴장한 얼굴을 한 채 곧장 반대편으로 전속력으로 달려가기 시작했습니다.
        무슨 일이 있었던 걸까요?""",
        clues=[
            "아이는 계주 경기중이었다."
        ],
        answer="""아이의 시선 끝에는 같은 반 친구가 들고 있던 바통이 있었다.
앞선 주자가 전력을 다해 달려와 바통을 내밀자, 그 순간을 기다리던 아이가 긴장된 얼굴로 뚫어져라 바라보다가, 드디어 바통을 받자마자 자기 구간을 전속력으로 달려나간 것이었다.
즉, 아이는 계주 경기 중이었던 것이다."""
    ),
    Episode(
        title="거울",
        question="""한 여자가 매일 아침 회사에 가기 전에 거울 앞에서 꼭 5분 이상을 서 있곤 했다.
하지만 어느 날은 거울을 보자마자 바로 집 밖으로 뛰쳐나갔다.
무슨 일이 있었던 걸까?""",
        clues=[
            "여자는 얼굴에 화상 흉터가 있었다",
            "참여 중이던 치료 약의 효과로 인해 흉터가 사라졌다"
        ],
        answer="""여자는 매일 아침 화상을 입은 얼굴을 가리기 위해 정성스럽게 화장을 했다.
그런데 그날 아침, 거울에 비친 자신의 얼굴에 화상이 전혀 보이지 않았던 것이다.
그 순간, 치료약 실험에 참여했던 약이 드디어 효과를 낸 것을 깨닫고, 화장이 필요 없게 되었다는 사실이 너무 기뻐, 여자는 곧장 집 밖으로 뛰쳐나갔다."""
    ),
    Episode(
        title="버스 정류장",
        question="""한 남자가 버스 정류장에서 버스를 기다리다가, 버스가 오자 갑자기 표정이 굳더니 탑승하지 않고 걸어가 버렸다. 무슨 일이 있었던 걸까?""",
        clues=[
            "남자의 아내가 낯선 남자와 다정히 같은 버스에 있었다."
        ],
        answer="""남자는 매일 같은 버스를 타고 회사로 출근했다. 
        하지만 그날 아침, 다가온 버스의 창문에 그의 아내와 낯선 남자가 다정하게 앉아 있는 모습이 비쳤다. 
        그 사실을 확인한 순간, 남자는 차마 버스를 탈 수 없었고 그냥 걸어서 떠나버렸다."""
    )
]

# 에피소드 제목 리스트 (선택용)
EPISODE_TITLES = [episode.title for episode in EPISODES]
